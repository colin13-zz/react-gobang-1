{"version":3,"sources":["game-gobang/wrapper.js","game-gobang/board.js","game-gobang/bars.js","game-gobang/matrix.js","game-gobang/game.js","App.js","serviceWorker.js","index.js"],"names":["GameOver","props","gameOver","react_default","a","createElement","className","Jumbotron","winner","InputNameForm","Form","Text","Group","Label","Control","placeholder","defaultValue","onChange","setPlayer1Name","setPlayer2Name","Button","type","onClick","submitNames","Box","className_","matrix","x_","position","x","y_","y","content","Col","updateMatrix","BoardRow","row","parseInt","center","Row","map","placement","GobangBoard","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","md","React","Component","PlayerBar","player1","firstPlayer","player2","p1Active","isBlack","p2Active","nameEntered","lg","Card","Header","variant","switchPlayer","ListGroup","Item","BottonBar","size","newGame","goBack","createMatrx","col","value","arr","Array","i","fill","copyMatrix","matrix_","check0","win","check45","j","check90","check135","GobangGame","state","history","currStep","_startGame","bind","assertThisInitialized","_setPlayer1Name","_setPlayer2Name","_updateMatrix","_switchPlayer","_newGame","_goBack","setState","event","target","index","history_","slice","isBlack_","concat","new1stPlayer","result","checkWin","secondPlayer","board_GobangBoard","App","game_GobangGame","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee7d2dee.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Jumbotron, Form, Button } from 'react-bootstrap';\nimport './wrapper.css';\n\nexport function GameOver(props) {\n  return (\n    (props.gameOver) ? \n    (<div className=\"gameOverWrapper\">\n      <Jumbotron className=\"textArea\">\n        <h1>The Winner is<br/><strong>{props.winner}</strong>!</h1>\n        <p>\n          - Please Start A New Game to Continue - \n        </p>\n      </Jumbotron>\n    </div>) :\n    (<div></div>)\n  );\n}\n\nexport function InputNameForm(props) {\n  return (\n    <Form>\n      <Form.Text className=\"text-muted\">\n          You can replace the default names with your prefered names!\n      </Form.Text>\n      <Form.Group >\n        <Form.Label>Player 1</Form.Label>\n        <Form.Control \n          placeholder=\"Enter the name of player1\" \n          defaultValue=\"Player 1\"\n          onChange={props.setPlayer1Name}\n        />\n      </Form.Group>\n    \n      <Form.Group >\n        <Form.Label>Player 2</Form.Label>\n        <Form.Control \n          placeholder=\"Enter the name of player2\" \n          defaultValue=\"Player 2\"\n          onChange={props.setPlayer2Name}\n        />\n      </Form.Group>\n      <Button className=\"normalButtons\" type=\"submit\" onClick={props.submitNames}>\n        Set Names\n      </Button>\n    </Form>\n  )\n}","import React from 'react';\nimport { Col, Row, } from 'react-bootstrap';\nimport {GameOver} from './wrapper.js'\nimport './board.css';\n\n\nfunction Box(props) {\n  const className_ = \"box\" + props.type;\n  // alert(className_);\n  const matrix = props.matrix;\n  const x_ = props.position.x, y_ = props.position.y;\n  const content = matrix[x_][y_] ? matrix[x_][y_] : '';\n  return (\n    <Col className={className_} onClick={() => props.updateMatrix(x_, y_)}>\n      <div className=\"piece\">\n        {content}\n      </div>\n    </Col>\n  );\n}\n\nfunction BoardRow(props) {\n  const row = parseInt(props.row);\n  var center = (row === 2 || row === 7 || row === 12) ? \"-center\" : \"\";\n  return (\n    <Row className=\"board-row\">\n      {[{y:  0, type: \"-left\" + props.type},\n        {y:  1, type: props.type},\n        {y:  2, type: center + props.type},\n        {y:  3, type: props.type},\n        {y:  4, type: props.type},\n        {y:  5, type: props.type},\n        {y:  6, type: props.type},\n        {y:  7, type: center + props.type},\n        {y:  8, type: props.type},\n        {y:  9, type: props.type},\n        {y: 10, type: props.type},\n        {y: 11, type: props.type},\n        {y: 12, type: center + props.type},\n        {y: 13, type: \"-right\" + props.type},\n        \n      ].map(placement => (\n        <Box \n          matrix={props.matrix} \n          position={{x: row, y: placement.y}} \n          updateMatrix={props.updateMatrix} \n          type={placement.type}/>\n      ))}\n    </Row>\n  );\n}\n\nexport default class GobangBoard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n        <Col className=\"board\" md=\"auto\">\n          <GameOver\n            gameOver={this.props.gameOver}\n            winner={this.props.winner}\n          />\n          {[{type: \"-top\", row: \"0\"}, \n            {type: \"\", row:  \"0\"},\n            {type: \"\", row:  \"1\"},\n            {type: \"\", row:  \"2\"},\n            {type: \"\", row:  \"3\"},\n            {type: \"\", row:  \"4\"},\n            {type: \"\", row:  \"5\"},\n            {type: \"\", row:  \"6\"},\n            {type: \"\", row:  \"7\"},\n            {type: \"\", row:  \"8\"},\n            {type: \"\", row:  \"9\"},\n            {type: \"\", row: \"10\"},\n            {type: \"\", row: \"11\"},\n            {type: \"\", row: \"12\"},\n            {type: \"\", row: \"13\"},\n            {type: \"-bottom\", row: \"14\"},\n          ].map(placement => (\n            <BoardRow \n              matrix={this.props.matrix} \n              updateMatrix={this.props.updateMatrix} \n              type={placement.type} row={placement.row}\n            />\n          ))}\n        </Col>\n    );\n  }\n}\n","import React from 'react';\nimport './bars.css'\nimport { Col, Button, Card, ListGroup, Form } from 'react-bootstrap';\nimport {InputNameForm} from './wrapper.js'\n\nvar playerMap = ['⚫️','⚪️'];\n\nexport function PlayerBar(props) {\n  const player1 = props.firstPlayer ? '⚪️' : '⚫️';\n  const player2 = props.firstPlayer ? '⚫️' : '⚪️';\n  const p1Active = props.firstPlayer ? \n                    (props.isBlack ? \"\" : \"-active\"):\n                    (props.isBlack ? \"-active\" : \"\");\n  const p2Active = (p1Active === \"-active\") ? \"\" : \"-active\";\n  return (\n    (props.nameEntered) ? \n      (<Col className=\"bottonContainer-left\" lg=\"auto\">\n        <Card className=\"normalCards\">\n\n          <Card.Header>\n            PLAYERS\n            <Button variant=\"switch\" onClick={()=>props.switchPlayer()}>\n              Switch Player\n            </Button>\n          </Card.Header>\n\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item className={\"listItems\"+p1Active}>\n              {props.player1}<br/> {player1}\n            </ListGroup.Item>\n            <ListGroup.Item className={\"listItems\"+p2Active}>\n              {props.player2}<br/> {player2}\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    ) : \n    (\n    <Col className=\"bottonContainer-left\" lg=\"auto\">\n      <InputNameForm \n        setPlayer1Name={props.setPlayer1Name}\n        setPlayer2Name={props.setPlayer2Name}\n        submitNames={props.submitNames}\n      />\n    </Col>)\n  );\n}\n\nexport function BottonBar(props) {\n  return (\n    (props.nameEntered) ? \n      (<Col className=\"bottonContainer-right\" md=\"auto\">\n        <Button className=\"normalButtons\" variant=\"flat\" size=\"xxl\">\n          Mode\n        </Button>\n        <Button \n          className=\"normalButtons\" variant=\"flat\" size=\"xxl\"\n          onClick={()=>props.newGame()}\n        >\n          New Game\n        </Button>\n        <Button className=\"normalButtons\" variant=\"flat\" size=\"xxl\"\n          onClick={()=>props.goBack()}\n        >\n          Go Back<br/>One Step\n        </Button>\n      </Col>) :\n      (<div></div>)\n  );\n}\n\n","/**\n * @param {*} row the number of rows \n * @param {*} col the number of columns\n * @param {*} value the initial values of each elems in the 2D array\n */\nexport function createMatrx(row, col, value) {\n  var arr = Array(row);\n  for (var i = 0; i < row; i++) {\n    arr[i] = Array(col).fill(value);\n  }\n  return arr;\n}\n\n/**\n * @param {*} row the number of rows \n * @param {*} col the number of columns\n * @param {*} matrix the matrix to copy\n */\nexport function copyMatrix(row, col, matrix) {\n  const matrix_ = createMatrx(row, col, 0);\n  for (var x = 0; x < row; x++) {\n    for (var y = 0; y < col; y++) {\n      matrix_[x][y] = matrix[x][y];\n    }\n  }\n  return matrix_;\n}\n\nfunction check0(matrix, x, y) {\n  if (y < 2 || y > 12) return {win: false, value: 0};\n  for (var i = y-2; i < y+3; i++) {\n    if (matrix[x][i] === 0 || matrix[x][i] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nfunction check45(matrix, x, y) {\n  if (y < 2 || y > 12 || x < 2 || x > 12)\n    return {win: false, value: 0};\n  for (var i = x-2, j = y+2; i < x+3; i++, j--) {\n    if (matrix[i][j] === 0 || matrix[i][j] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nfunction check90(matrix, x, y) {\n  if (x < 2 || x > 12) return {win: false, value: 0};\n  for (var i = x-2; i < x+3; i++) {\n    if (matrix[i][y] === 0 || matrix[i][y] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nfunction check135(matrix, x, y) {\n  if (y < 2 || y > 12 || x < 2 || x > 12)\n    return {win: false, value: 0};\n  for (var i = x-2, j = y-2; i < x+3; i++, j++) {\n    if (matrix[i][j] === 0 || matrix[i][j] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nexport function checkWin(matrix) {\n  for (var x = 0; x < 15; x++) {\n    for (var y = 0; y < 15; y++) {\n      var result = check0(matrix, x, y);\n      if (result.win) return result;\n      var result = check90(matrix, x, y);\n      if (result.win) return result;\n      var result = check135(matrix, x, y);\n      if (result.win) return result;\n      var result = check45(matrix, x, y);\n      if (result.win) return result;\n    }\n  }\n  return {win: false, value: 0};\n}\n\n","import React, {Component} from 'react';\nimport { Row } from 'react-bootstrap';\nimport GobangBoard from './board.js'\nimport {BottonBar, PlayerBar} from './bars.js'\nimport {createMatrx, copyMatrix, checkWin} from './matrix.js'\nimport './game.css'\n\nexport default class GobangGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      matrix      : createMatrx(15, 15, 0),\n      isBlack     : true,\n      firstPlayer : 0,\n      history     : [\n        {\n          matrix: createMatrx(15, 15, 0),\n        }\n      ],\n      currStep : 0,\n      player1  : 'Player 1',\n      player2  : 'Player 2',\n      nameEntered : false,\n    }\n    this.gameOver = false;\n    this.winner = '';\n\n    this._startGame = this._startGame.bind(this);\n    this._setPlayer1Name = this._setPlayer1Name.bind(this);\n    this._setPlayer2Name = this._setPlayer2Name.bind(this);\n    this._updateMatrix = this._updateMatrix.bind(this);\n    this._switchPlayer = this._switchPlayer.bind(this);\n    this._newGame = this._newGame.bind(this);\n    this._goBack = this._goBack.bind(this);\n  }\n  \n  _startGame() {\n    this.setState({nameEntered: true});\n  }\n\n  _setPlayer1Name(event) {\n    this.setState({player1: event.target.value});\n  }\n\n  _setPlayer2Name(event) {\n    this.setState({player2: event.target.value});\n  }\n\n  _updateMatrix(x, y) {\n    const matrix_ = copyMatrix(15, 15, this.state.matrix);\n    const index = this.state.currStep + 1;\n    const history_ = this.state.history.slice(0, index);\n    const isBlack_ = this.state.isBlack;\n    if (matrix_[x][y]) return;\n    matrix_[x][y] = isBlack_ ? '⚫️' : '⚪️';\n\n    this.setState({\n      matrix  : matrix_,\n      isBlack : !isBlack_,\n      history : history_.concat([\n        {\n          matrix: matrix_\n        }\n      ]),\n      currStep : index,\n    });\n  }\n\n  _switchPlayer() {\n    const new1stPlayer = this.state.firstPlayer ? 0 : 1;\n    const isBlack_ = this.state.isBlack;\n    this.setState({\n      isBlack     : !isBlack_,\n      firstPlayer : new1stPlayer,\n    });\n  }\n\n  _newGame() {\n    const isBlack_ = this.state.firstPlayer ? false : true;\n    this.setState({\n      matrix  : createMatrx(15, 15, 0),\n      isBlack : isBlack_,\n      history : [\n        {\n          matrix: createMatrx(15, 15, 0),\n        }\n      ],\n      currStep : 0,\n    });\n    this.gameOver = false;\n    this.winner = '';\n  }\n\n  _goBack() {\n    const index = this.state.currStep - 1;\n    if (index <= 0) return;\n    const isBlack_ = !this.state.isBlack;\n    const history_ = this.state.history.slice(0, index);\n    const matrix_ = copyMatrix(15, 15, history_[index-1].matrix);\n    this.setState({\n      currStep : index,\n      history  : history_,\n      matrix   : matrix_,\n      isBlack  : isBlack_,\n    });\n  }\n\n  render() {\n    const result = checkWin(this.state.matrix);\n    if (result.win) {\n      this.gameOver = true;\n      const firstPlayer = this.state.firstPlayer ? this.state.player2 : this.state.player1;\n      const secondPlayer = this.state.firstPlayer ? this.state.player1 : this.state.player2;\n      this.winner = this.state.currStep % 2 === 1 ? firstPlayer : secondPlayer;\n    }\n\n    return (\n      <Row className=\"gameContainer\" >\n        <PlayerBar \n          switchPlayer={this._switchPlayer}\n          firstPlayer={this.state.firstPlayer}\n          isBlack={this.state.isBlack}\n          player1={this.state.player1}\n          player2={this.state.player2}\n          nameEntered={this.state.nameEntered}\n          setPlayer1Name={this._setPlayer1Name}\n          setPlayer2Name={this._setPlayer2Name}\n          submitNames={this._startGame}\n        />\n        <GobangBoard \n          matrix={this.state.matrix} \n          updateMatrix={this._updateMatrix}\n          gameOver={this.gameOver}\n          winner={this.winner}\n        />\n        <BottonBar \n          nameEntered={this.state.nameEntered}\n          newGame={this._newGame}\n          goBack={this._goBack}\n        />\n      </Row>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport GobangGame from './game-gobang/game.js';\nimport { Col } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <Col>\n      <GobangGame />\n    </Col>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}