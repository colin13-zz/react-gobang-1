{"version":3,"sources":["game-gobang/bars.js","game-gobang/wrapper.js","game-gobang/matrix.js","game-gobang/board.js","game-gobang/game.js","game-gobang/gobangPage.js","serviceWorker.js","index.js","App.js"],"names":["PlayerBar","props","player1","firstPlayer","player2","p1Active","isBlack","p2Active","displayPlayer","nameEntered","displaySetNames","react_default","a","createElement","Col","className","lg","style","display","Card","Header","TipButton","key_","value","onClick","switchPlayer","name","variant","resetNames","Text","ListGroup","Item","InputNameForm","setPlayer1Name","setPlayer2Name","submitNames","BottonBar","timerText","newGameText","color_","seconds","md","resetTimer","color","class_","size","newGame","goBack","OverlayTrigger","key","placement","overlay","Tooltip","id","concat","Button","halfWidth_","Math","floor","window","innerWidth","width_","GameOver","gameOver","Jumbotron","winner","submitTips","Form","width","alignItems","flexDirection","Group","Label","Control","placeholder","defaultValue","onChange","createMatrx","row","col","arr","Array","i","fill","copyMatrix","matrix","matrix_","x","y","check0","win","check45","j","check90","check135","Box","className_","type","x_","position","y_","content","active_","active","updateMatrix","BoardRow","parseInt","center","Row","map","GobangBoard","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","rotate_","transform","React","Component","GobangGame","state","history","currStep","timer","startTimer","bind","assertThisInitialized","countDown","_startGame","_resetNames","_setPlayer1Name","_setPlayer2Name","_updateMatrix","_switchPlayer","_newGame","_goBack","setState","setInterval","event","target","index","history_","slice","isBlack_","new1stPlayer","result","checkWin","secondPlayer","clearInterval","board_GobangBoard","MobilePage","fluid","href","GobangPage","game_GobangGame","Boolean","location","hostname","match","ReactDOM","render","react_router_dom","Navbar","bg","zIndex","boxShadow","Brand","Nav","Link","inline","FormControl","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.902ffb00.chunk.js","sourcesContent":["import React from 'react';\nimport './bars.css'\nimport { Col, Button, Card, ListGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { InputNameForm } from './wrapper.js'\n\nexport function PlayerBar(props) {\n  const player1 = props.firstPlayer ? '⚪️' : '⚫️';\n  const player2 = props.firstPlayer ? '⚫️' : '⚪️';\n  const p1Active = props.firstPlayer ? \n                    (props.isBlack ? \"\" : \"-active\"):\n                    (props.isBlack ? \"-active\" : \"\");\n  const p2Active = (p1Active === \"-active\") ? \"\" : \"-active\";\n  const firstPlayer = props.firstPlayer ? props.player2 : props.player1;\n  const displayPlayer = (props.nameEntered) ? 'flex' : 'none';\n  const displaySetNames = (props.nameEntered) ? 'none' : 'flex';\n  return (\n    <div>\n      <Col className=\"bottonContainer-left\" lg=\"auto\" style={{display: displayPlayer}}>\n        <Card className=\"normalCards\">\n          <Card.Header>\n            PLAYERS\n            <TipButton \n              key_=\"right\" value=\"Click to decide who go first!\"\n              onClick={()=>props.switchPlayer()}\n              name=\"Switch Player\"\n              variant=\"switch\"\n            />\n            <TipButton \n              key_=\"right\" value=\"Click to change the names!\"\n              onClick={()=>props.resetNames()}\n              name=\"Reset Names\"\n              variant=\"switch\"\n            />\n          </Card.Header>\n        </Card>\n\n        <Card className=\"normalCards\">\n          <Card.Text >\n            <br/><strong>{firstPlayer}</strong> go first\n          </Card.Text>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item className={\"listItems\"+p1Active}>\n              {props.player1}<br/> {player1}\n            </ListGroup.Item>\n            <ListGroup.Item className={\"listItems\"+p2Active}>\n              {props.player2}<br/> {player2}\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n      {/* Input name bar */}\n      <Col className=\"bottonContainer-left\" lg=\"auto\" style={{display: displaySetNames}}>\n        <InputNameForm \n          setPlayer1Name={props.setPlayer1Name}\n          setPlayer2Name={props.setPlayer2Name}\n          player1={props.player1}\n          player2={props.player2}\n          submitNames={props.submitNames}\n        />\n      </Col>\n\n    </div>\n  );\n}\n\nexport function BottonBar(props) {\n  const timerText = <p> Click <strong>New Game</strong> Botton below to countdown</p>\n  const modeText = 'Sorry the Computer vs. User mode is in-progress.';\n  const newGameText = <p>Click to <strong>Start a new Game!</strong><br/>(please set the players before starting).</p>;\n  const goBackText = 'Click to go back one step';\n  var color_ = props.seconds ? 'black' : 'red';\n  return (\n    (props.nameEntered) ? (\n      <Col className=\"bottonContainer-right\" md=\"auto\">\n        <TipButton \n          key_=\"left\" value={timerText}\n          onClick={()=>props.resetTimer()}\n          name={<p style={{color: color_}}>Time Remain<br/><h2>{props.seconds}s</h2></p>}\n          class_=\"normalButtons\" variant=\"white\" size=\"xxl\"\n        />\n        <TipButton \n          key_=\"left\" value={modeText}\n          onClick={()=>1}\n          name={'Mode'}\n          class_=\"normalButtons\" variant=\"flat\" size=\"xxl\"\n        />\n        <TipButton \n          key_=\"left\" value={newGameText}\n          onClick={()=>props.newGame()}\n          name={'New Game'}\n          class_=\"normalButtons\" variant=\"flat\" size=\"xxl\"\n        />\n        <TipButton \n          key_=\"left\" value={goBackText}\n          onClick={()=>props.goBack()}\n          name={'Go Back'}\n          class_=\"normalButtons\" variant=\"flat\" size=\"xxl\"\n        />\n      </Col>\n      ) : (\n        <div></div>\n      )\n  );\n}\n\nexport function TipButton(props) {\n  return (\n    <OverlayTrigger\n      key={props.key_}\n      placement={props.key_}\n      overlay={\n        <Tooltip id={`tooltip-${props.key_}`}>\n          {props.value}\n        </Tooltip>\n      }\n    >\n      <Button className={props.class_} variant={props.variant} size={props.size}\n        onClick={props.onClick}\n      >\n        {props.name}\n      </Button>\n    </OverlayTrigger>\n  );\n}\n\n","import React from 'react';\nimport { Jumbotron, Form } from 'react-bootstrap';\nimport { TipButton } from './bars.js';\nimport './wrapper.css';\n\nconst halfWidth_ = Math.floor(window.innerWidth / 2) + 'px';\nconst width_ = Math.floor(window.innerWidth) + 'px';\n\nexport function GameOver(props) {\n  return (\n    (props.gameOver) ? \n    (<div className=\"gameOverWrapper\">\n      <Jumbotron className=\"textArea\">\n        <h1>The Winner is<br/><strong>{props.winner}</strong>!</h1>\n        <p>\n          - Please Start A New Game to Continue - \n        </p>\n      </Jumbotron>\n    </div>) :\n    (<div></div>)\n  );\n}\nexport function InputNameForm(props) {\n  const submitTips = <p>Click to submit the names and <strong>Begin the Game!</strong></p>;\n  return (\n    <Form style={{width: width_, alignItems: 'center', display: 'flex', flexDirection: 'column'}}>\n      <Form.Text >\n        <h1 className=\"icon\">Gobang</h1>\n      </Form.Text>\n      <Form.Text className=\"text-muted\">\n          You can replace the default names with your prefered names!\n      </Form.Text>\n      <Form.Group style={{width: halfWidth_}}>\n        <Form.Label>Player 1</Form.Label>\n        <Form.Control \n          placeholder=\"Enter the name of player1\" \n          defaultValue={props.player1}\n          onChange={props.setPlayer1Name}\n        />\n      </Form.Group>\n      <Form.Group style={{width: halfWidth_}}>\n        <Form.Label>Player 2</Form.Label>\n        <Form.Control \n          placeholder=\"Enter the name of player2\" \n          defaultValue={props.player2}\n          onChange={props.setPlayer2Name}\n        />\n      </Form.Group>\n      <TipButton \n        key_=\"bottom\" value={submitTips}\n        onClick={()=>props.submitNames()}\n        name=\"Submit Names\"\n        class_=\"normalButtons\" variant=\"flat\" \n      />\n    </Form>\n  )\n}\n\n","/**\n * @param {*} row the number of rows \n * @param {*} col the number of columns\n * @param {*} value the initial values of each elems in the 2D array\n */\nexport function createMatrx(row, col, value) {\n  var arr = Array(row);\n  for (var i = 0; i < row; i++) {\n    arr[i] = Array(col).fill(value);\n  }\n  return arr;\n}\n\n/**\n * @param {*} row the number of rows \n * @param {*} col the number of columns\n * @param {*} matrix the matrix to copy\n */\nexport function copyMatrix(row, col, matrix) {\n  const matrix_ = createMatrx(row, col, 0);\n  for (var x = 0; x < row; x++) {\n    for (var y = 0; y < col; y++) {\n      matrix_[x][y] = matrix[x][y];\n    }\n  }\n  return matrix_;\n}\n\nfunction check0(matrix, x, y) {\n  if (y < 2 || y > 12) return {win: false, value: 0};\n  for (var i = y-2; i < y+3; i++) {\n    if (matrix[x][i] === 0 || matrix[x][i] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nfunction check45(matrix, x, y) {\n  if (y < 2 || y > 12 || x < 2 || x > 12)\n    return {win: false, value: 0};\n  for (var i = x-2, j = y+2; i < x+3; i++, j--) {\n    if (matrix[i][j] === 0 || matrix[i][j] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nfunction check90(matrix, x, y) {\n  if (x < 2 || x > 12) return {win: false, value: 0};\n  for (var i = x-2; i < x+3; i++) {\n    if (matrix[i][y] === 0 || matrix[i][y] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nfunction check135(matrix, x, y) {\n  if (y < 2 || y > 12 || x < 2 || x > 12)\n    return {win: false, value: 0};\n  for (var i = x-2, j = y-2; i < x+3; i++, j++) {\n    if (matrix[i][j] === 0 || matrix[i][j] !== matrix[x][y]) \n      return {win: false, value: 0};\n  }\n  return {win: true, value: matrix[x][y]};\n}\n\nexport function checkWin(matrix) {\n  for (var x = 0; x < 15; x++) {\n    for (var y = 0; y < 15; y++) {\n      var result = check0(matrix, x, y);\n      if (result.win) return result;\n      var result = check90(matrix, x, y);\n      if (result.win) return result;\n      var result = check135(matrix, x, y);\n      if (result.win) return result;\n      var result = check45(matrix, x, y);\n      if (result.win) return result;\n    }\n  }\n  return {win: false, value: 0};\n}\n\n","import React from 'react';\nimport { Col, Row, } from 'react-bootstrap';\nimport {GameOver} from './wrapper.js'\nimport {createMatrx} from './matrix.js'\nimport './board.css';\n\n\nfunction Box(props) {\n  const className_ = \"box\" + props.type;\n  // alert(className_);\n  const matrix = props.matrix;\n  const x_ = props.position.x, y_ = props.position.y;\n  const content = matrix[x_][y_] ? matrix[x_][y_] : '';\n  const active_ = props.active[x_][y_] ? props.active[x_][y_] : '';\n  return (\n    <Col \n      className={className_} \n      onClick={() => {props.updateMatrix(x_, y_);}}\n    >\n      <div className=\"piece\">\n        {content}\n      </div>\n      <div className=\"piece-active\">\n        {active_}\n      </div> \n    </Col>\n  );\n}\n\nfunction BoardRow(props) {\n  const row = parseInt(props.row);\n  var center = (row === 2 || row === 7 || row === 12) ? \"-center\" : \"\";\n  return (\n    <Row className=\"board-row\">\n      {[{y:  0, type: \"-left\" + props.type},\n        {y:  1, type: props.type},\n        {y:  2, type: center + props.type},\n        {y:  3, type: props.type},\n        {y:  4, type: props.type},\n        {y:  5, type: props.type},\n        {y:  6, type: props.type},\n        {y:  7, type: center + props.type},\n        {y:  8, type: props.type},\n        {y:  9, type: props.type},\n        {y: 10, type: props.type},\n        {y: 11, type: props.type},\n        {y: 12, type: center + props.type},\n        {y: 13, type: props.type},\n        {y: 14, type: \"-right\" + props.type},\n      ].map(placement => (\n        <Box \n          matrix={props.matrix} \n          active={props.active}\n          position={{x: row, y: placement.y}} \n          updateMatrix={props.updateMatrix} \n          type={placement.type}/>\n      ))}\n    </Row>\n  );\n}\n\nexport default class GobangBoard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const rotate_ = this.props.nameEntered ? '0' : '45';\n    return (\n        <Col className=\"board\" md=\"auto\" style={{transform: `rotate(${rotate_}deg)`}}>\n          <GameOver\n            gameOver={this.props.gameOver}\n            winner={this.props.winner}\n          />\n          {[{type: \"-top\", row: \"0\"}, \n            {type: \"\", row:  \"1\"},\n            {type: \"\", row:  \"2\"},\n            {type: \"\", row:  \"3\"},\n            {type: \"\", row:  \"4\"},\n            {type: \"\", row:  \"5\"},\n            {type: \"\", row:  \"6\"},\n            {type: \"\", row:  \"7\"},\n            {type: \"\", row:  \"8\"},\n            {type: \"\", row:  \"9\"},\n            {type: \"\", row: \"10\"},\n            {type: \"\", row: \"11\"},\n            {type: \"\", row: \"12\"},\n            {type: \"\", row: \"13\"},\n            {type: \"-bottom\", row: \"14\"},\n          ].map(placement => (\n            <BoardRow \n              matrix={this.props.matrix} \n              active={this.props.active}\n              updateMatrix={this.props.updateMatrix} \n              type={placement.type} row={placement.row}\n            />\n          ))}\n        </Col>\n    );\n  }\n}","import React, {Component} from 'react';\nimport { Row } from 'react-bootstrap';\nimport GobangBoard from './board.js'\nimport {BottonBar, PlayerBar} from './bars.js'\nimport {createMatrx, copyMatrix, checkWin} from './matrix.js'\nimport './game.css'\n\nexport default class GobangGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      matrix      : createMatrx(15, 15, 0),\n      active      : createMatrx(15, 15, 0),\n      isBlack     : true,\n      firstPlayer : 0,\n      history     : [\n        {\n          matrix: createMatrx(15, 15, 0),\n        }\n      ],\n      currStep : 0,\n      player1  : 'Player 1',\n      player2  : 'Player 2',\n      nameEntered : false,\n      seconds  : 60,\n    }\n    this.gameOver = false;\n    this.winner = '';\n\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n\n    this._startGame = this._startGame.bind(this);\n    this._resetNames = this._resetNames.bind(this);\n    this._setPlayer1Name = this._setPlayer1Name.bind(this);\n    this._setPlayer2Name = this._setPlayer2Name.bind(this);\n    this._updateMatrix = this._updateMatrix.bind(this);\n    this._switchPlayer = this._switchPlayer.bind(this);\n    this._newGame = this._newGame.bind(this);\n    this._goBack = this._goBack.bind(this);\n  }\n\n  startTimer() {\n    this.setState({seconds: 60});\n    if (this.timer == 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    if (seconds === -1) return;\n    this.setState({\n      seconds: seconds,\n    });\n  }\n  \n  _startGame() {\n    this.setState({nameEntered: true});\n    this.startTimer();\n  }\n\n  _setPlayer1Name(event) {\n    this.setState({player1: event.target.value});\n  }\n\n  _setPlayer2Name(event) {\n    this.setState({player2: event.target.value});\n  }\n\n  _updateMatrix(x, y) {\n    const matrix_ = copyMatrix(15, 15, this.state.matrix);\n    const index = this.state.currStep + 1;\n    const history_ = this.state.history.slice(0, index);\n    const isBlack_ = this.state.isBlack;\n    const active_ = createMatrx(15, 15, 0);\n    active_[x][y] = '🔴'\n    if (matrix_[x][y]) return;\n    matrix_[x][y] = isBlack_ ? '⚫️' : '⚪️';\n\n    this.setState({\n      matrix  : matrix_,\n      isBlack : !isBlack_,\n      active  : active_,\n      history : history_.concat([\n        {\n          matrix: matrix_\n        }\n      ]),\n      currStep : index,\n    });\n    this.startTimer();\n  }\n\n  _switchPlayer() {\n    const new1stPlayer = this.state.firstPlayer ? 0 : 1;\n    this.setState({\n      firstPlayer : new1stPlayer,\n    });\n    this.startTimer();\n  }\n\n  _newGame() {\n    this.setState({\n      matrix  : createMatrx(15, 15, 0),\n      active  : createMatrx(15, 15, 0),\n      isBlack : true,\n      history : [\n        {\n          matrix: createMatrx(15, 15, 0),\n        }\n      ],\n      currStep : 0,\n    });\n    this.gameOver = false;\n    this.winner = '';\n    this.startTimer();\n  }\n\n  _resetNames() {\n    this.setState({\n      nameEntered : false,\n    });\n    this.startTimer();\n  }\n\n  _goBack() {\n    const index = this.state.currStep - 1;\n    if (index <= 0) return;\n    const isBlack_ = !this.state.isBlack;\n    const history_ = this.state.history.slice(0, index);\n    const matrix_ = copyMatrix(15, 15, history_[index-1].matrix);\n    this.setState({\n      currStep : index,\n      history  : history_,\n      matrix   : matrix_,\n      active   : createMatrx(15, 15, 0),\n      isBlack  : isBlack_,\n    });\n    this.startTimer();\n  }\n\n  render() {\n    const result = checkWin(this.state.matrix);\n    if (result.win) {\n      this.gameOver = true;\n      const firstPlayer = this.state.firstPlayer ? this.state.player2 : this.state.player1;\n      const secondPlayer = this.state.firstPlayer ? this.state.player1 : this.state.player2;\n      this.winner = this.state.currStep % 2 === 1 ? firstPlayer : secondPlayer;\n      clearInterval(this.timer);\n    }\n\n    return (\n      <Row className=\"gameContainer\" >\n        <PlayerBar \n          switchPlayer={this._switchPlayer}\n          firstPlayer={this.state.firstPlayer}\n          isBlack={this.state.isBlack}\n          player1={this.state.player1}\n          player2={this.state.player2}\n          nameEntered={this.state.nameEntered}\n          setPlayer1Name={this._setPlayer1Name}\n          setPlayer2Name={this._setPlayer2Name}\n          submitNames={this._startGame}\n          resetNames={this._resetNames}\n        />\n        <GobangBoard \n          matrix={this.state.matrix} \n          active={this.state.active}\n          updateMatrix={this._updateMatrix}\n          gameOver={this.gameOver}\n          winner={this.winner}\n          nameEntered={this.state.nameEntered}\n        />\n        <BottonBar \n          nameEntered={this.state.nameEntered}\n          newGame={this._newGame}\n          goBack={this._goBack}\n          seconds={this.state.seconds}\n          resetTimer={this.startTimer}\n        />\n      </Row>\n    );\n  }\n}","import React from 'react';\nimport './gobangPage.css';\nimport GobangGame from './game.js';\nimport { Col, Jumbotron } from 'react-bootstrap';\n\nfunction MobilePage() {\n  return (\n    <Jumbotron className=\"mobilePage_\" fluid>\n      <h3>Dear Mobile User,<br/></h3>\n      <p>Please play <strong>Gobang</strong> on a Computer or Laptop.</p>\n      <a className=\"simple2048Link\" href=\"https://ruihuasui.github.io/react-simple2048/\">\n        Try <strong>Simple 2048</strong> Here\n      </a>\n    </Jumbotron>\n  );\n}\n\nexport default function GobangPage() {\n  const onMobile = window.innerWidth <= 520 ? true : false;\n  return (onMobile) ?(\n    <MobilePage />\n  ) : (\n    <Col>\n      <GobangGame />\n    </Col>\n  ); \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport GobangPage from './game-gobang/gobangPage.js'\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nexport default function App (){\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"light\" variant=\"light\" style={{zIndex: 1, boxShadow: '5px 5px 15px rgba(71, 71, 71, 0.931)'}}>\n          <Navbar.Brand href=\"/react-gobang/\">\n            <img\n              className=\"logo\"\n              href=\"./images/logo.png\"\n            />\n            {' '}Gobang\n          </Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/react-gobang/\">Gobang</Nav.Link>\n            <Nav.Link href=\"https://ruihuasui.github.io/react-simple2048/\">Simple 2048</Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-info\">Search</Button>\n          </Form>\n        </Navbar>\n        <Route exact path=\"/react-gobang/\" component={GobangPage} />\n      </div>\n    </Router>\n  );\n}"],"sourceRoot":""}